import{_ as p,o,c as i,a as t,b as a,d as s,e as c,r as l}from"./app-CNRroVhM.js";const u={},r={href:"https://yarnpkg.com/api/plugin-exec/interface/ExecEnv",target:"_blank",rel:"noopener noreferrer"};function d(k,n){const e=l("ExternalLinkIcon");return o(),i("div",null,[n[5]||(n[5]=t(`<h1 id="yarnpkg-plugin-exec" tabindex="-1"><a class="header-anchor" href="#yarnpkg-plugin-exec"><span><code>@yarnpkg/plugin-exec</code></span></a></h1><blockquote><p><strong>Experimental</strong></p><p>This feature is still incubating, and we&#39;ll likely be improving it based on your feedback.</p></blockquote><p>This plugin will add support to Yarn for the <code>exec:</code> protocol. This protocol is special in that it&#39;ll instruct Yarn to execute the specified Node script and use its output as package content (thus treating the script as a kind of package factory).</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><p>This plugin is included by default starting from Yarn 4.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p><strong>package.json</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;pkg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;exec:./gen-pkg.js&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>gen-pkg.js</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span>buildDir<span class="token punctuation">}</span> <span class="token operator">=</span> execEnv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>buildDir<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">package.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">pkg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">1.0.0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>buildDir<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">index.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">module.exports = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rationale" tabindex="-1"><a class="header-anchor" href="#rationale"><span>Rationale</span></a></h2><p>Typical Yarn fetchers download packages from the internet - this works fine if the project you want to use got packaged beforehand, but fails short as soon as you need to bundle it yourself. Yarn&#39;s builtin mechanism allows you to run the <code>prepare</code> script on compatible git repositories and use the result as final package, but even that isn&#39;t always enough - you may need to clone a specific branch, go into a specific directory, run a specific build script ... all things that makes it hard for us to support every single use case.</p><p>The <code>exec:</code> protocol represents a way to define yourself how the specified package should be fetched. In a sense, it can be seen as a more high-level version of the <a href="/advanced/lexicon#fetcher">Fetcher API</a> that Yarn provides.</p><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation"><span>Documentation</span></a></h2><p>The JavaScript file targeted by the <code>exec:</code> protocol will be invoked inside a temporary directory at fetch-time with a preconfigured runtime environment. The script is then expected to populate a special directory defined in the environment, and exit once the generation has finished.</p><h3 id="generator-scripts-require" tabindex="-1"><a class="header-anchor" href="#generator-scripts-require"><span>Generator scripts &amp; <code>require</code></span></a></h3><p>Because the generator will be called in a very special context (before any package has been installed on the disk), it won&#39;t be able to call the <code>require</code> function (not even with relative paths). Should you need very complex generators, just bundle them up beforehand in a single script using tools such as Webpack or Rollup.</p><p>Because of this restriction, and because generators will pretty much always need to use the Node builtin modules, those are made available in the global scope - in a very similar way to what the Node REPL already does. As a result, no need to manually require the <code>fs</code> module: it&#39;s available through the global <code>fs</code> variable!</p><h3 id="runtime-environment" tabindex="-1"><a class="header-anchor" href="#runtime-environment"><span>Runtime environment</span></a></h3>`,19)),a("p",null,[n[1]||(n[1]=s("In order to let the script knows about the various predefined folders involved in the generation process, Yarn will inject a special ")),n[2]||(n[2]=a("code",null,"execEnv",-1)),n[3]||(n[3]=s(" global variable available to the script. This object's ")),a("a",r,[n[0]||(n[0]=s("interface")),c(e)]),n[4]||(n[4]=s(" is defined as such:"))]),n[6]||(n[6]=t('<table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>tempDir</code></td><td><code>string</code></td><td>The absolute path of the empty temporary directory. It is created before the script is invoked.</td></tr><tr><td><code>buildDir</code></td><td><code>string</code></td><td>The absolute path of the empty build directory that will be compressed into an archive and stored within the cache. It is created before the script is invoked.</td></tr><tr><td><code>locator</code></td><td><code>string</code></td><td>The stringified <code>Locator</code> identifying the generator package.</td></tr></tbody></table><p>You&#39;re free to do whatever you want inside <code>execEnv.tempDir</code> but, at the end of the execution, Yarn will expect <code>execEnv.buildDir</code> to contain the files that can be compressed into an archive and stored within the cache.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><p>Generate an hello world package:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>execEnv<span class="token punctuation">.</span>buildDir<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;hello-world&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  version<span class="token operator">:</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>execEnv<span class="token punctuation">.</span>buildDir<span class="token punctuation">,</span> <span class="token string">&#39;index.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>\n<span class="line">  module.exports = &#39;hello world!&#39;;</span>\n<span class="line"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Clone a monorepo and build a specific package:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> pathToRepo <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>execEnv<span class="token punctuation">.</span>tempDir<span class="token punctuation">,</span> <span class="token string">&#39;repo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> pathToArchive <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>execEnv<span class="token punctuation">.</span>tempDir<span class="token punctuation">,</span> <span class="token string">&#39;archive.tgz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> pathToSubpackage <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>pathToRepo<span class="token punctuation">,</span> <span class="token string">&#39;packages/foobar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Clone the repository</span></span>\n<span class="line">child_process<span class="token punctuation">.</span><span class="token function">execFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">git</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">clone</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">git@github.com:foo/bar</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> pathToRepo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Install the dependencies</span></span>\n<span class="line">child_process<span class="token punctuation">.</span><span class="token function">execFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">yarn</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">install</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>cwd<span class="token operator">:</span> pathToRepo<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Pack a specific workspace</span></span>\n<span class="line">child_process<span class="token punctuation">.</span><span class="token function">execFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">yarn</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">pack</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">--out</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> pathToArchive<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>cwd<span class="token operator">:</span> pathToSubpackage<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Send the package content into the build directory</span></span>\n<span class="line">child_process<span class="token punctuation">.</span><span class="token function">execFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">tar</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-x</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-z</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">--strip-components=1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-f</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> pathToArchive<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">-C</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> execEnv<span class="token punctuation">.</span>buildDir<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',7))])}const m=p(u,[["render",d],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/berry--yarnpkg-cli-4.5.1/berry--yarnpkg-cli-4.5.1/packages/plugin-exec/","title":"@yarnpkg/plugin-exec","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Rationale","slug":"rationale","link":"#rationale","children":[]},{"level":2,"title":"Documentation","slug":"documentation","link":"#documentation","children":[{"level":3,"title":"Generator scripts & require","slug":"generator-scripts-require","link":"#generator-scripts-require","children":[]},{"level":3,"title":"Runtime environment","slug":"runtime-environment","link":"#runtime-environment","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]}]}],"git":{},"filePathRelative":"berry--yarnpkg-cli-4.5.1/berry--yarnpkg-cli-4.5.1/packages/plugin-exec/README.md"}');export{m as comp,h as data};
